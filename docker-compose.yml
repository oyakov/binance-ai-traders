version: '3.8'

# Required secrets/environment variables when wiring the binance-trader-macd service into this stack:
#   BINANCE_API_KEY - Binance API key exposed to the trader container.
#   BINANCE_API_SECRET - Binance API secret consumed for request signing.
#   BINANCE_REST_BASE_URL - Optional override for selecting mainnet vs testnet endpoints.
#   BINANCE_TRADER_TEST_ORDER_MODE_ENABLED - Toggle to run `/api/v3/order/test` dry runs from the trader container.

services:
  binance-data-collection:
    build: 
      context: .
      dockerfile: binance-data-collection/Dockerfile
    container_name: binance-data-collection
    depends_on:
      - kafka
      - schema-registry
    networks:
      - binance-network
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_KAFKA_PROPERTIES_SCHEMA_REGISTRY_URL: http://schema-registry:8081
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: binance
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - binance-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es-data:/usr/share/elasticsearch/data
    networks:
      - binance-network

  kafka:
    image: apache/kafka:3.8.0
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: OUTSIDE
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      # Set the offsets.topic.replication.factor to 1,
      # to match a single broker setup for test setup
      # Default is 3, and the topics can't be auto-created
      # until this number of nodes is not launched into the cluster
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_BROKER_ID: 1
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - binance-network

  schema-registry:
    image: confluentinc/cp-schema-registry:7.5.1
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:9092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
            # set global default compatibility to NONE
      SCHEMA_REGISTRY_SCHEMA_COMPATIBILITY_LEVEL: none
    networks:
      - binance-network

  matrix-ui-portal:
    build:
      context: ./matrix-ui-portal
      dockerfile: Dockerfile
    container_name: matrix-ui-portal
    ports:
      - "3000:3000"
    networks:
      - binance-network

volumes:
  postgres-data:
  es-data:
  kafka-data:

networks:
  binance-network:
    driver: bridge
